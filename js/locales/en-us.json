{
    "menu": {
        "menu": "menu",
        "load": "LOAD",
        "save": "SAVE",
        "addPanel": "Add Panel",
        "dataSource": "Data source"
    },
    "global": {
        "yes": "Yes",
        "no": "No"
    },
    "dataSource": {
        "title": "Data source",
        "givenName": "Given Name",
        "lastUpdated": "Last updated",
        "addTo": "Add to",
        "limit100": "A maximum of 100 characters"
    },
    "panel": {
        "title": "Pane",
        "delete": {
            "title": "Delete confirmation",
            "text": "Are you sure you want to delete the pane"
        },
        "edit": {
            "title": "Title",
            "description": "A maximum of 100 characters",
            "colWidth": "Column width",
            "colWidthDescription": "Up to 10 block"
        }
    },
    "JSEditor": {
        "javascript": {
            "exampleText": "// Example: Convert from Celsius to Fahrenheit, Truncation point two digits below",
            "codeWindowHeader": "This JavaScript will be re-evaluated each time reference data source is updated. And <span class='cm-keyword'> return value </span> will be displayed in the widget. You function <code> <span class='cm-keyword'> function </span> (<span class='cm-def'> datasources </span>) </code> can be used to describe the contents in JavaScript of. argument datasources is an array of the added data source."
        },
        "json": {
            "exampleText": "// Example: {title '\n //' value ': 10 \n} ';",
            "codeWindowHeader": " Among the string enclosed in use the appropriate escape sequence. <br> example: 'function (label, series) {return (\\\" ID: \\\"+ label);}'"
        },
        "cancel": "Close"
    },
    "PluginEditor": {
        "datasourceTool": "data source",
        "tableOperation": "Add",
        "dialog": {
            "yes": "Save",
            "no": "Cancel"
        },
        "type": "type",
        "firstOption": "Please select the type you want to add."
    },
    "plugins": {
        "datasource": {
            "sufix": "Seconds",
            "refresh": "update frequency",
            "clock": {
                "title": "Clock",
                "description": ". Is updated at specified intervals, and returns the current time in different formats or view a timer on the screen, the widget can be used in order to refresh at regular intervals.",
                "zones": {
                    "title": "Time zone",
                    "options": {
                        "utc-12": "(UTC-12: 00) International Date Line west",
                        "utc-11": "(UTC-11: 00) UTC -11",
                        "utc-10": "(UTC-10: 00) Hawai",
                        "utc-09": "(UTC-09: 00) Alaska",
                        "utc-08-1": "(UTC-08: 00) Baja California",
                        "utc-08-2": "(UTC-08: 00) Pacific Ocean Time (US & Canada)",
                        "utc-07-1": "(UTC-07: 00) Chihuahua, La Paz, Mazatlan",
                        "utc-07-2": "(UTC-07: 00) Arizona",
                        "utc-07-3": "(UTC-07: 00) Mountain Time (US and Canada)",
                        "utc-06-1": "(UTC-06: 00) Central America",
                        "utc-06-2": "(UTC-06: 00) Central Time (US & Canada)",
                        "utc-06-3": "(UTC-06: 00) Saskatchewan",
                        "utc-06-4": "(UTC-06: 00) Guadalajara, Mexico City, Monterrey",
                        "utc-05-1": "(UTC-05: 00) Bogota, Lima, Quito",
                        "utc-05-2": "(UTC-05: 00) Eastern Indiana",
                        "utc-05-3": "(UTC-05: 00) Eastern Time (US & Canada)",
                        "utc-0430": "(UTC-04: 30) Caracas",
                        "utc-04-1": "(UTC-04: 00) Atlantic Standard Time (Canada) ",
                        "utc-04-2": "(UTC-04: 00) Asuncion",
                        "utc-04-3": "(UTC-04: 00) Georgetown, La Paz, Manaus, San Juan",
                        "utc-04-4": "(UTC-04: 00) Cuiaba",
                        "utc-04-5": "(UTC-04: 00) Santiago",
                        "utc-0330": "(UTC-03: 30) Newfoundland",
                        "utc-03-1": "(UTC-03: 00) Brasilia",
                        "utc-03-2": "(UTC-03: 00) Greenland",
                        "utc-03-3": "(UTC-03: 00) Cayenne, Fortaleza",
                        "utc-03-4": "(UTC-03: 00) Buenos Aires",
                        "utc-03-5": "(UTC-03: 00) Montevideo",
                        "utc-02": "(UTC-02: 00) UTC -2",
                        "utc-01-1": "(UTC-01: 00) Cape Verde Islands",
                        "utc-01-2": "(UTC-01: 00) Azores",
                        "utc-00-1": "(UTC + 00: 00) Casablanca",
                        "utc-00-2": "(UTC + 00: 00) Monrovia, Reykjavik",
                        "utc-00-3": "(UTC + 00: 00) Dublin, Edinburgh, Lisbon, London",
                        "utc-00-4": "(UTC + 00: 00) Coordinated Universal Time",
                        "utc + 01-1": "(UTC + 01: 00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna",
                        "utc + 01-2": "(UTC + 01: 00) Brussels, Copenhagen, Madrid, Paris",
                        "utc + 01-3": "(UTC + 01: 00) West Central Africa",
                        "utc + 01-4": "(UTC + 01: 00) Belgrade, Bratislava, Budapest, Ljubljana, Prague",
                        "utc + 01-5": "(UTC + 01: 00) Sarajevo, Skopje, Warsaw, Zagreb",
                        "utc + 01-6": "(UTC + 01: 00) Windhoek",
                        "utc + 02-1": "(UTC + 02: 00) Athens, Bucharest, Istanbul",
                        "utc + 02-2": "(UTC + 02: 00) Helsinki, Kiev, Riga, Sofia, Tallinn, Vilnius",
                        "utc + 02-3": "(UTC + 02: 00) Cairo",
                        "utc + 02-4": "(UTC + 02: 00) Damascus",
                        "utc + 02-5": "(UTC + 02: 00) Amman",
                        "utc + 02-6": "(UTC + 02: 00) Harare, Pretoria",
                        "utc + 02-7": "(UTC + 02: 00) Jerusalem",
                        "utc + 02-8": "(UTC + 02: 00) Beirut",
                        "utc + 03-1": "(UTC + 03: 00) Baghdad",
                        "utc + 03-2": "(UTC + 03: 00) Minsk",
                        "utc + 03-3": "(UTC + 03: 00) Kuwait, Riyadh",
                        "utc + 03-4": "(UTC + 03: 00) Nairobi",
                        "utc + 0330": "(UTC + 03: 30) Tehran",
                        "utc + 04-1": "(UTC + 04: 00) Moscow, St. Petersburg, Volgograd",
                        "utc + 04-2": "(UTC + 04: 00) Tbilisi",
                        "utc + 04-3": "(UTC + 04: 00) Yerevan",
                        "utc + 04-4": "(UTC + 04: 00) Abu Dhabi, Muscat",
                        "utc + 04-5": "(UTC + 04: 00) Baku",
                        "utc + 04-6": "(UTC + 04: 00) Port Louis",
                        "utc + 4030": "(UTC + 04: 30) Kabul",
                        "utc + 05-1": "(UTC + 05: 00) Tashkent",
                        "utc + 05-2": "(UTC + 05: 00) Islamabad, Karachi",
                        "utc + 0530-1": "(UTC + 05: 30) Sri Jayawardenepura Kotte",
                        "utc + 0530-2": "(UTC + 05: 30) Chennai, Kolkata, Mumbai, New Delhi",
                        "utc + 0545": "(UTC + 05: 45) Kathmandu",
                        "utc + 06-1": "(UTC + 06: 00) Astana",
                        "utc + 06-2": "(UTC + 06: 00) Dhaka",
                        "utc + 06-3": "(UTC + 06: 00) Yekaterinburg",
                        "utc + 0630": "(UTC + 06: 30) Yangon (Rangoon)",
                        "utc + 07-1": "(UTC + 07: 00) Bangkok, Hanoi, Jakarta",
                        "utc + 07-2": "(UTC + 07: 00) Novosibirsk",
                        "utc + 08-1": "(UTC + 08: 00) Krasnoyarsk",
                        "utc + 08-2": "(UTC + 08: 00) Ulaanbaatar",
                        "utc + 08-3": "(UTC + 08: 00) Beijing, Chongqing, Hong Kong Special Administrative Region, Urumqi",
                        "utc + 08-4": "(UTC + 08: 00) Perth",
                        "utc + 08-5": "(UTC + 08: 00) Kuala Lumpur, Singapore",
                        "utc + 08-6": "(UTC + 08: 00) Taipei",
                        "utc + 09-1": "(UTC + 09: 00) Irkutsk",
                        "utc + 09-2": "(UTC + 09: 00) Seoul",
                        "utc + 09-3": "(UTC + 09: 00) Osaka, Sapporo, Tokyo",
                        "utc + 0930-1": "(UTC + 09: 30) Darwin",
                        "utc + 0930-2": "(UTC + 09: 30) Adelaide",
                        "utc + 10-1": "(UTC + 10: 00) Hobart",
                        "utc + 10-2": "(UTC + 10: 00) Yakutsk",
                        "utc + 10-3": "(UTC + 10: 00) Brisbane",
                        "utc + 10-4": "(UTC + 10: 00) Guam, Port Moresby",
                        "utc + 10-5": "(UTC + 10: 00) Canberra, Melbourne, Sydney",
                        "utc + 11-1": "(UTC + 11: 00) Vladivostok",
                        "utc + 11-2": "(UTC + 11: 00) Solomon Islands, New Caledonia",
                        "utc + 12-1": "(UTC + 12: 00) UTC +12",
                        "utc + 12-2": "(UTC + 12: 00) Fiji, Marshall Islands",
                        "utc + 12-3": "(UTC + 12: 00) Magadan",
                        "utc + 12-4": "(UTC + 12: 00) Auckland, Wellington",
                        "utc + 13-1": "(UTC + 13: 00) Nuku'alofa",
                        "utc + 13-2": "(UTC + 13: 00) Samoa"
                    }
                }
            },
            "json": {
                "description": "I will receive the JSON data from the specified URL.",
                "use_proxy_name": "proxy server attempts",
                "use_proxy_description": "The first direct connection, if it fails, it will attempt to JSONP connection If this also fails, you can use a proxy server will be able to solve many of the API connection trouble by using . <a href='https://github.com/Freeboard/thingproxy' target='_blank'> details </a> ",
                "method": "method",
                "body_description": "To. The request body normally used during POST method up to 2000 characters",
                "header_name_name": "name",
                "header_name_description": "Up to 500 characters",
                "header_value_name": "value",
                "header_value_description": "Up to 500 characters"
            },
            "openweathermap": {
                "display_name": "Open Weather Map API",
                "description": "I will receive a variety of weather data, including the weather and forecasts history. ",
                "settings": {
                    "location_name": "location",
                    "location_description": "up to 200 characters <br> example: London, UK",
                    "unit_name": "Unit",
                    "unit_metric": "metric",
                    "unit_imperial": "Imperial"
                }
            },
            "playback": {
                "name": "Playback",
                "description": "Play the continuous data at a specified interval and then waiting a valid JSON file that contains an array of objects.",
                "settings": {
                    "datafile_name": "data file URL",
                    "datafile_description": "link to the JSON array data",
                    "is_json": "JSONP use",
                    "loop_name": "loop playback",
                    "loop_description": "rewind and during loop playback Exit"
                }
            },
            "json_websocket": {
                "name": "JSON WebSocket",
                "description": "Use the WebSocket API browser built-in to get the data of the JSON format.",
                "settings": {
                    "url_name": "DNS host name",
                    "url_description": "up to 1000 characters"
                }
            },
            "node_js": {
                "name": "Node.js (Socket.io)",
                "description": "I will streaming <a href='http://socket.io/', target='_blank'> Socket.io </a> the data source in real time. ",
                "settings": {
                    "url_name": "DNS host name",
                    "url_description": "up to 1000 characters (optional) If you want to use a custom namespace, add the last name space of URL <br> example:. http://localhost/chat",
                    "events_name": "events",
                    "events_description": "Please specify the event name to be added to the data source. ",
                    "events_options_1": "event name",
                    "rooms_name": "(optional) Room",
                    "room_description": ". If you want to use the room, you must specify the room name you want to add other cases Leave blank.",
                    "rooms_settings_name": "room name",
                    "rooms_settings_event_name": "event name to participate in the Room"
                }
            },
            "mqtt": {
                "display_name": "MQTT over Websocket",
                "description": "<a href='http://mqtt.org/', target = '_blank'> MQTT</a> through the WebSocket Protocol to use, MQTT broker server from data sources gets in real time.",
                "settings": {
                    "url": {
                        "display_name": "DNS host name",
                        "description": "up to 1000 characters <br> MQTT broker server's DNS host name. Example <br>: location.hostname "
                    },
                    "port": {
                        "display_name": "Port number"
                    },
                    "clientID": {
                        "display_name": "Client ID",
                        "description": "up to 23 characters <br> any of client ID string"
                    },
                    "topic": {
                        "display_name": "Topic",
                        "description": "up to 500 characters, <br> subscribe to topic names. <br> example: my/topic "
                    },
                    "username": {
                        "display_name": "(optional) user name",
                        "description": " up to 100 characters and <br> blank. "
                    },
                    "password": {
                        "display_name": "(optional) password",
                        "description": "up to 100 characters and <br> blank. "
                    },
                    "reconnect": {
                        "display_name": "auto-reconnect",
                        "reconnect automatically if the description": "connection is broken. "
                    }
                }
            }
        }
    },
    "widgets": {
        "title": "Widget",
        "suffix": "second",
        "text_widget": {
            "display_name": "Text",
            "settings": {
                "title": {
                    "display_name": "Title",
                    "description": "up to 100 characters long"
                },
                "size": {
                    "display_name": "Size",
                    "options": {
                        "regular": "regular",
                        "big": "big"
                    }
                },
                "value": {
                    "display_name": "Value",
                    "description": "up to 2000 characters"
                },
                "sparkline": {
                    "display_name": "Sparklines"
                },
                "animate": {
                    "display_name": "Value changes in animation"
                },
                "units": {
                    "display_name": "Unit",
                    "description": "up to 20 characters long"
                }
            }
        },
        "sparkline": {
            "display_name": "Sparklinchart",
            "settings": {
                "title": {
                    "display_name": "Title",
                    "description": "up to 100 characters long"
                },
                "value": {
                    "display_name": "Value",
                    "description": "up to 500 characters long"
                }
            }
        },
        "gauge": {
            "display_name": "Language",
            "settings": {
                "title": {
                    "display_name": "Title",
                    "description": "up to 100 characters long"
                },
                "value": {
                    "display_name": "Value",
                    "description": "up to 2000 characters"
                },
                "shape": {
                    "display_name": "Type",
                    "options": {
                        "value_0": "half",
                        "vale_1": "fans",
                        "value_2": "donut"
                    }
                },
                "units": {
                    "display_name": "Unit",
                    "description": "up to 20 characters long"
                },
                "value_fontcolor": {
                    "display_name": "Value font color",
                    "description": "default color: #d3d4d4"
                },
                "gauge_upper_color": {
                    "display_name": "Gauge color Upper",
                    "description": "default color: #ff0000"
                },
                "gauge_mid_color": {
                    "display_name": "Gauge color Mid",
                    "description": "default color: #f9c802"
                },
                "gauge_lower_color": {
                    "display_name": "Gauge color Lower",
                    "description": "default color: #a9d70b"
                },
                "gauge_color": {
                    "display_name": "Gauge background color",
                    "description": "default color: #edebeb"
                },
                "gauge_widthscale": {
                    "display_name": "Gauge thickness",
                    "description": "0-200"
                },
                "min_value": {
                    "display_name": "Minimum values",
                    "description": "numbers only"
                },
                "max_value": {
                    "display_name": "Maximum value",
                    "description": "the minimum value over"
                }
            }
        },
        "pointer": {
            "display_name": "Pointer",
            "settings": {
                "title": {
                    "display_name": "Title",
                    "description": "up to 100 characters long"
                },
                "direction": {
                    "display_name": "Direction",
                    "description": " up to 2000 characters <br> angle."
                },
                "value_text": {
                    "display_name": "Value text",
                    "description": "up to 2000 characters"
                },
                "units": {
                    "display_name": "Unit",
                    "description": "up to 20 characters long"
                },
                "circle_color": {
                    "display_name": "Circle color",
                    "description": "default color: #ff9900"
                },
                "pointer_color": {
                    "display_name": "Pointer color",
                    "description": "default color: #fff"
                }
            }
        },
        "picture": {
            "display_name": "Image",
            "settings": {
                "src": {
                    "display_name": "Image URL",
                    "description": "up to 2000 characters"
                },
                "number": {
                    "display_name": "Update frequency",
                    "description": "leave blank if you do not want to update the frequency"
                }
            }
        },
        "indicator": {
            "display_name": "Indicator lights",
            "settings": {
                "title": {
                    "display_name": "Title",
                    "description": "up to 100 characters long"
                },
                "value": {
                    "display_name": "Value",
                    "description": "up to 2000 characters"
                },
                "on_text": {
                    "display_name": "ON when the text",
                    "description": "up to 2000 characters"
                },
                "off_text": {
                    "display_name": "OFF when the text",
                    "description": "up to 500 characters long"
                }
            }
        },
        "google_map": {
            "display_name": "Google Map",
            "settings": {
                "lat": {
                    "display_name": "Latitude",
                    "description": "up to 2000 characters"
                },
                "lon": {
                    "display_name": "Longitude",
                    "description": "up to 2000 characters"
                },
                "blocks": {
                    "display_name": "Height (number of blocks)",
                    "description": "1 block 60 pixels. Up to 20 blocks "
                }
            }
        },
        "html": {
            "display_name": "HTML",
            "settings": {
                "html": {
                    "display_name": "HTML",
                    "description": "up to 2000 characters <br> HTML string or javascript can be used. "
                },
                "height": {
                    "display_name": "Block height",
                    "description": "1 block 60 pixels. Up to 20 blocks "
                }
            }
        }
    }
}
